% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_01_prepare_data.R
\name{tdata_upD_parcond}
\alias{tdata_upD_parcond}
\title{Update and export the tits dataset completed with the parental condition variables}
\usage{
tdata_upD_parcond(
  myrawdata = raw_tits,
  my_tdata = here::here("output", "tables", "ndata_rawiv.csv")
)
}
\arguments{
\item{myrawdata}{The path to the raw tits data object (\code{raw_tits_data.rda}). Cf.
\code{\link[ppl.tits:import_raw_tits_data]{import_raw_tits_data}}.}

\item{my_tdata}{The path to the dataset generated
by \code{\link[ppl.tits:tdata_upD_rawiv]{tdata_upD_rawiv}}. Note that this argument is not
necessarily required but is strongly advised.
Therefore, if you want to reproduce this work, you should not call this function unless you
have previously built the {targets} pipeline described in _targets.R (e.g. by using
targets::tar_make())! If you DO NOT KNOW what I'm talking about, then you should
read the README file (https://github.com/mrelnoob/ppl.tits) and PROBABLY NOT modify the
function's arguments (see examples section).}
}
\value{
A list containing 1) the updated dataset (a tibble accessible with
\code{tdata_upD_parcond()$dataset}), and 2) the path to the exported .csv file of the updated
dataset (accessible with \code{tdata_upD_parcond()$path}).
}
\description{
(THEORETICALLY MEANT FOR INTERNAL USE ONLY, use with caution!) \cr
The function is the \strong{third} of a series of functions meant to update and
complete the tits dataset with its independent variables (i.e. predictors and covariates).
The \code{tdata_upD_parcond} function loads and modifies the dataset generated by the previous
update function (\code{\link[ppl.tits:tdata_upD_rawiv]{tdata_upD_rawiv}}) by computing
the two proxy variables meant to represent the tits parental condition: that is \emph{father_cond}
and \emph{mother_cond}. NOTE, however, that only \emph{Parus major} (Great tits) will have values
for these variables as our adult sample size for \emph{Cyanistes caeruleus} (Blue tits) is too small
to allow proper missing value imputations and approximation of the parental condition.
When it's done processing, the function exports the updated dataset as a new .csv file.
}
\examples{
\dontrun{
mydata <- tdata_upD_parcond(myrawdata = raw_tits, my_tdata = tdata_rawiv)$dataset
path_to_csv <- tdata_upD_parcond(myrawdata = raw_tits, my_tdata = tdata_rawiv)$path
# NOTE: this code won't work unless the {targets} pipeline has been built first!
}
}
